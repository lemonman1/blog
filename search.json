[{"title":"CentOS常用命令","url":"/CentOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","content":"<p>centos 中常用的一些命令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span>   <span class=\"token comment\">#显示当前目录列表 (仅仅包括名字)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ll   <span class=\"token comment\">#显示当前目录列表</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">[</span>参数<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 跳转到某个目录</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">pwd</span>    <span class=\"token comment\"># 显示当前所在目录</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">mkdir</span>  <span class=\"token punctuation\">[</span>目录名<span class=\"token punctuation\">]</span> <span class=\"token comment\">#创建一个目录</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">touch</span>  <span class=\"token punctuation\">[</span>文件<span class=\"token punctuation\">]</span>   <span class=\"token comment\">#创建一个文件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">cat</span>   <span class=\"token punctuation\">[</span>文件<span class=\"token punctuation\">]</span>  <span class=\"token comment\">#瞄一眼，还有一些参数用的时候注意</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>tial  <span class=\"token punctuation\">[</span>文件<span class=\"token punctuation\">]</span>  <span class=\"token comment\">#显示文件结尾，常常与 -n 表示最后多少行，与 - f 表示监听</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">rm</span> <span class=\"token punctuation\">[</span>文件或目录<span class=\"token punctuation\">]</span>  <span class=\"token comment\">#删除文件或目录，目录不为空时需要加 - r 递归删除，加 - f 表示强制删除</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">cp</span> <span class=\"token punctuation\">[</span>源文件<span class=\"token punctuation\">]</span>  <span class=\"token punctuation\">[</span>目标文件<span class=\"token punctuation\">]</span> <span class=\"token comment\">#复制文件， cp 后面还可以加一些参数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">mv</span> <span class=\"token punctuation\">[</span>源文件<span class=\"token punctuation\">]</span>  <span class=\"token punctuation\">[</span>目标文件<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 移动文件</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">chmod</span>  <span class=\"token comment\">#修改某个文件的权限</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">ip</span> <span class=\"token function\">add</span>  <span class=\"token comment\">#查看 IP 地址</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">ifconfig</span> <span class=\"token comment\">#查看网卡配置</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token function\">uname</span>    <span class=\"token comment\">#查看系统版本</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">uptime</span>   <span class=\"token comment\">#查看系统负载</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">free</span>   <span class=\"token comment\">#查看内存使用情况</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token function\">history</span>  <span class=\"token comment\">#查看历史执行的命令</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token function\">whereis</span> <span class=\"token comment\">#搜索命令的命令</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token function\">which</span>   <span class=\"token comment\">#也是搜索命令的命令</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token function\">find</span>    <span class=\"token comment\">#搜索文件的命令</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token function\">tar</span>  <span class=\"token comment\">#压缩和解压缩命令</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token function\">reboot</span> <span class=\"token comment\">#重启</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token function\">ps</span> -ef <span class=\"token comment\">#查看系统中的进程</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token function\">top</span> <span class=\"token comment\">#监听系统负载信息</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token function\">kill</span> <span class=\"token punctuation\">[</span>pid<span class=\"token punctuation\">]</span> <span class=\"token comment\">#终止进程 加上 -9 强制杀掉某个进程</span></pre></td></tr></table></figure><h3 id=\"防火墙\"><a class=\"anchor\" href=\"#防火墙\">#</a> 防火墙</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl start firewalld <span class=\"token comment\">#开启防火墙</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>systemctl stop firewalld <span class=\"token comment\">#关闭防火墙</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>systemctl disable firewalld <span class=\"token comment\">#禁用防火墙</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>firewall-cmd --reload <span class=\"token comment\">#重启防火墙</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>firewall-cmd --version <span class=\"token comment\">#防火墙版本</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>firewall-cmd --help <span class=\"token comment\">#帮助</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>firewall-cmd --state <span class=\"token comment\">#防火墙状态</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>systemctl status firewalld <span class=\"token comment\">#同上，显示信息更多</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>firewall-cmd --query-port<span class=\"token operator\">=</span><span class=\"token number\">80</span>/tcp <span class=\"token comment\">#查看某个端口开发情况，这里是 80 端口</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>firewall-cmd --permanent --list-ports <span class=\"token comment\">#查看所有端口开发情况</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>firewall-cmd --permanent --add-port<span class=\"token operator\">=</span><span class=\"token number\">80</span>/tcp <span class=\"token comment\">#开放扣个端口</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>firewall-cmd --permanent --remove-port<span class=\"token operator\">=</span><span class=\"token number\">80</span>/tcp <span class=\"token comment\">#关闭某个端口</span></pre></td></tr></table></figure>","categories":["操作系统"],"tags":["centos","linux"]},{"title":"Java中的变量、基本数据类型及运算符","url":"/Java%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F%E3%80%81%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8F%8A%E8%BF%90%E7%AE%97%E7%AC%A6/","content":"<h3 id=\"变量\"><a class=\"anchor\" href=\"#变量\">#</a> 变量</h3>\n<blockquote>\n<p>变量来源于数学，是计算机语言中能储存计算结果或能表示值抽象概念。变量可以通过变量名访问。在指令式语言中，变量通常是可变的；但在纯函数式语言（如 Haskell）中，变量可能是不可变的。在一些语言中，变量可能被明确为是能表示可变状态、具有存储空间的抽象（如在 Java 和 Visual Basic 中）；但另外一些语言可能使用其它概念（如 C 的对象）来指称这种抽象，而不严格地定义 “变量” 的准确外延。——<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlOEYlOTglRTklODclOEYvMzk1Njk2OD9mcj1hbGFkZGlu\"> 百度百科</span></p>\n</blockquote>\n<h4 id=\"标识符的命名规则\"><a class=\"anchor\" href=\"#标识符的命名规则\">#</a> 标识符的命名规则</h4>\n<ol>\n<li>\n<p>标识符只能由数字、字母、下划线、$ 这四种字符组成。</p>\n</li>\n<li>\n<p>标识符的首字符不能是数字。</p>\n</li>\n<li>\n<p>标识符区分大小写的。如：变量 a 或变量 A 代表两个不同的变量。</p>\n</li>\n<li>\n<p>标识符不能是系统的保留字，如：public void int ... 都不能作为变量名。</p>\n<p><strong>例如：</strong> test、$abc01、_name5 等</p>\n</li>\n</ol>\n<h4 id=\"标识符的命名规范\"><a class=\"anchor\" href=\"#标识符的命名规范\">#</a> 标识符的命名规范</h4>\n<ol>\n<li>一般对变量、方法都是用驼峰式命名法（首单词的首字母小写，以后每个单词首字母大写）<strong>如：studentId、studentName</strong></li>\n<li>对类名、接口名一般使用 pascal（帕斯卡命名法），每个单词的首字母均大写。</li>\n<li>标识符一般尽量做到望文生义。<strong>如：</strong> name、age、addr、sex、id 等。</li>\n</ol>\n<h4 id=\"变量的声明及赋值\"><a class=\"anchor\" href=\"#变量的声明及赋值\">#</a> 变量的声明及赋值</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 声明一个变量</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        a <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 给一个变量赋值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> <span class=\"token class-name\">A</span> <span class=\"token operator\">=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 声明一个变量并同时赋值</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"基本数据类型\"><a class=\"anchor\" href=\"#基本数据类型\">#</a> 基本数据类型</h3>\n<h4 id=\"整数类型byte-short-int-long\"><a class=\"anchor\" href=\"#整数类型byte-short-int-long\">#</a> 整数类型（byte short int long）</h4>\n<blockquote>\n<p><strong>byte：</strong> 字节类型，占一个字节，8 位 ，范围：-128 到 127<br />\n<strong>short：</strong> 短整型，占两个字节，范围：-32768 到 32767<br />\n<strong>int：</strong> 整型，占四个字节，范围：-2147483648 到 2147483647?<br />\n<strong>long：</strong> 长整型，占 8 个字节，范围：-9223372036854775808 到 9223372036854775807</p>\n</blockquote>\n<h4 id=\"浮点类型float-double\"><a class=\"anchor\" href=\"#浮点类型float-double\">#</a> 浮点类型（float double）</h4>\n<blockquote>\n<p><strong>float：</strong> 单精度度浮点型，占 4 个字节，保留小数点后 7 位<br />\n<strong> double：</strong> 双精度浮点型，占 8 个字节，保留小数点后 15 位<br />\n<strong>注意：</strong> 声明 float 类型时候需要写成 <code>float f = 2.3456f</code> ，因为 java 中小数默认是 double 类型。</p>\n</blockquote>\n<h4 id=\"字符类型char\"><a class=\"anchor\" href=\"#字符类型char\">#</a> 字符类型（char）</h4>\n<p>一个字符型对应 ASCII 码的值，因此字符类型可以进行计算和比较大小。</p>\n<blockquote>\n<ul>\n<li>①小写字母 'a' 到 'z' 对应于 97-122</li>\n<li>②大写字母 'A' 到 'Z' 对应于 65-90</li>\n<li>③字符 '0' 到 '9' 对应于 48-57</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span> ch <span class=\"token operator\">=</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ch = \"</span> <span class=\"token operator\">+</span> ch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">char</span> ch1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>ch <span class=\"token operator\">-</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 将字符 'a' 转化为 'A'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ch1 = \"</span> <span class=\"token operator\">+</span> ch1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"布尔类型boolean\"><a class=\"anchor\" href=\"#布尔类型boolean\">#</a> 布尔类型（boolean）</h4>\n<blockquote>\n<p>布尔类型只能是 true 或者 false</p>\n</blockquote>\n<h3 id=\"运算符\"><a class=\"anchor\" href=\"#运算符\">#</a> 运算符</h3>\n<h4 id=\"算术运算符单目运算符与双目运算符\"><a class=\"anchor\" href=\"#算术运算符单目运算符与双目运算符\">#</a> 算术运算符（单目运算符与双目运算符）</h4>\n<ol>\n<li><strong>双目运算符：</strong> 就是需要有两个运算数参与的运算符，如：+ - * / %</li>\n<li><strong>单目运算符：</strong> 就是只需要有一个运算数就可进行运算的运算符，如：++ - -<br />\n①在单独使用时，无论是前加还是后加，前减还是后减，最后结果都是其自加 1 或者自减 1。<br />\n②与表达式一起使用时候，前<ins>表示先自加 1 再进行表达式运算，后</ins>表示参与运算后再进行自加 1，前后 &quot;- -&quot; 用法与 ++ 相同。<br />\n<strong>例如：</strong></li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> c <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c <span class=\"token operator\">=</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//a 的值先赋给 c，然后进行自加 1，所以此时 c = 10,a = 11</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>a<span class=\"token punctuation\">;</span>\t  <span class=\"token comment\">//a 先自加 1，然后再赋值给 c，此时 c = 12 ,a = 12</span></pre></td></tr></table></figure><h4 id=\"关系运算符\"><a class=\"anchor\" href=\"#关系运算符\">#</a> 关系运算符（&gt;  &gt;=  &lt;  &lt;=  ==  !=）</h4>\n<p>关系运算符主要用于比较，两边可以是具体数据，也可以是表达式，其最终运算结果返回一个布尔类型，即 true 或者 false。</p>\n<h4 id=\"逻辑运算符\"><a class=\"anchor\" href=\"#逻辑运算符\">#</a> 逻辑运算符（&amp;&amp;  ||  ！）</h4>\n<blockquote>\n<p><strong>作用：</strong> 用于连接关系表达式<br />\n<strong>逻辑与（&amp;&amp;）：</strong> 所有表达式都为 true 时，整个逻辑运算结果才为 true。<strong>短路与</strong>  参与运算的多个表达式只要有一个为 false，其后的表达式就不再执行了。<br />\n<strong>逻辑或（||）：</strong> 参与运算的多个表达式只要有一个为 true, 整个表达式就返回 true。<strong>短路或</strong> 如果参与运算的多个表达式有一个为 true, 其后的表达式就不会再执行了<br />\n<strong>逻辑非（！）：</strong> 可以将一个表达式的布尔结果取反。</p>\n</blockquote>\n<h4 id=\"赋值运算符\"><a class=\"anchor\" href=\"#赋值运算符\">#</a> 赋值运算符</h4>\n<ul>\n<li>简单赋值运算符：=</li>\n</ul>\n<blockquote>\n<p><code>int a = 10    //将一个值赋给一个变量</code></p>\n</blockquote>\n<ul>\n<li>复合赋值运算符：+=   -=  *=  /=</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 简单赋值运算符</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> a <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 相当于：a = a + 5;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> a <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 相当于：a = a + 1; 即 a++;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> a <span class=\"token operator\">-=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 相当于：a = a - 4;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> a <span class=\"token operator\">*=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 相当于：a = a * 3;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> a <span class=\"token operator\">/=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 相当于：a = a / 3;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> a <span class=\"token operator\">%=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 相当于：a = a % 3;</span></pre></td></tr></table></figure><blockquote>\n<p><strong>注意：</strong> 复合赋值运算符不会改变变量的数据类型，当计算结果大于其数据类型时，会自动强制转换为当前数据类型<br />\n<strong>如下：</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">byte</span> a <span class=\"token operator\">=</span><span class=\"token number\">10</span>     <span class=\"token comment\">// 当使用 a = a * 250 时程序会报错，因为计算结果 2500 超出了 byte 类型的范围，而使用 a *= 250</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a <span class=\"token operator\">*=</span> <span class=\"token number\">250</span>       <span class=\"token comment\">// 时程序就不会报错，其实赋值运算的会有一个默认的强制转换。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>              <span class=\"token comment\">// 本程序中 a *= 250 等价于 a = (byte)(a * 250)</span></pre></td></tr></table></figure></blockquote>\n<h3 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h3>\n<ul>\n<li><strong>数据类型：</strong>  <code>byte &lt; short = char &lt; int &lt; long &lt; float&lt; double</code>  表示了数据类型的强弱，弱数据类型向强数据类型转换时，可以自动完成数据类型的转换，强类型向弱类型转换时，需要加上强制转换符，并且可能丢失精度。</li>\n<li><strong>运算符的优先级：</strong> 算术运算符 &gt; 关系运算符 &gt; 逻辑运算符 &gt; 赋值运算符</li>\n</ul>\n<blockquote>\n<p>()<br />\n++ - - ！<br />\n*/ %<br />\n+ -<br />\n\\ &gt; &gt;= &lt; &lt;= == !=<br />\n&amp;&amp;<br />\n||<br />\n= += -= *= /= %=</p>\n</blockquote>\n","categories":["java学习"],"tags":["变量","数据类型","运算符"]},{"title":"Java学习札记一","url":"/Java%E5%AD%A6%E4%B9%A0%E6%9C%AD%E8%AE%B0%E4%B8%80/","content":"<h4 id=\"两个变量的值交换\"><a class=\"anchor\" href=\"#两个变量的值交换\">#</a> 两个变量的值交换</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>b <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 方法一 借助第三个变量 t</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>t <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>b <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 方法二  使用加减</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>b <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 方法三\t使用乘除与加减相似</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>a <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>b <span class=\"token operator\">=</span> a <span class=\"token operator\">/</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>a <span class=\"token operator\">=</span> a <span class=\"token operator\">/</span> b</pre></td></tr></table></figure><h4 id=\"switchcase-值语句\"><a class=\"anchor\" href=\"#switchcase-值语句\">#</a> switch ()....case 值：语句</h4>\n<blockquote>\n<p>①  在 swith 语句中括号类只能是 char、byte、short、int、String、enum 类型。<br />\n②  case 语句需要使用 break 退出，因为 swith 语句具有穿透性： <code>匹配成功后，就会一直执行后面的代码，知道遇到break才会终止语句。</code></p>\n</blockquote>\n<h4 id=\"for循环语句\"><a class=\"anchor\" href=\"#for循环语句\">#</a> for 循环语句</h4>\n<ul>\n<li><strong>for 循环结构：</strong>  <code>for(循环变量初始化;循环条件;循环变量更新)&#123;循环体&#125;</code></li>\n<li><strong>应用场景：</strong> 在已知所需循环次数的循环中常用。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> ；i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 表示循环打印出 0-9</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><strong>注意：</strong></p>\n<ul>\n<li>for 循环中（）中的任意条件都不是必须的，即内容可以空着不写，但是 <code>;</code>  是必须要写的，可以写成 <code>for(;;)&#123;&#125;</code> 。因此可以根据实际情况设置满足不同需求的 for 循环。</li>\n<li>在 for 循环中，若循环变量 <code>i</code>  声明在 <code>()</code>  内，则在 for 循环结束后将无法获取 <code>i</code>  的值。</li>\n</ul>\n</blockquote>\n<h4 id=\"数组\"><a class=\"anchor\" href=\"#数组\">#</a> 数组</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> z <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 二维数组的声明</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> y <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>swig￼<span class=\"token number\">0</span><span class=\"token operator\">--</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> h <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 此类声明在使用时还需要对一维数组进行声明如：h [0] = new int [3]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                              <span class=\"token comment\">// 使用 Arrays.sort () 方法可以将一个数组排序</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// 通过 Arrays.binarySearch () 来查询数组中某个元素</span></pre></td></tr></table></figure><blockquote>\n<p><strong>注意：</strong> 使用数组时一定要记住定义好下标，否侧会出现数组越界的错误！在使用 <code>Arrays.binarySearch()</code>  方法时，一定要先对数组进行排序，并且该方法返回的是排序后的字符索引。</p>\n</blockquote>\n<h4 id=\"string类常用方法\"><a class=\"anchor\" href=\"#string类常用方法\">#</a> String 类常用方法</h4>\n<p>字符串类是一个不可改变的类，使用 final 修饰，因此每一次对字符进行操作都会返回一个新的字符，而不是在原有的字符串上进行操作。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Sting</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello,World!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                           <span class=\"token comment\">// 返回字符串的长度</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// 将字符串转换为大写并返回</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// 将字符串转换为小写并返回</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                          <span class=\"token comment\">// 取出指定位置的字符并返回</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"l\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                       <span class=\"token comment\">// 得到某个字符第一次出现的位置</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"o\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 得到某个字符最后一次出现的位置</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                         <span class=\"token comment\">// 按照逗号对字符串进行拆分</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                       <span class=\"token comment\">// 从指定位置开始截取到结束</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// 从指定位置截取到指定位置</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                             <span class=\"token comment\">// 去除字符串中的空格</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"e\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 判断是否以指定字符串开始，返回布尔类型</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// 判断是否以指定字符串结束，返回布尔类型</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// 是否包含 指定的字符串，返回布尔类型</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 替换指定字符串中某</span></pre></td></tr></table></figure><h4 id=\"stringbuffer类\"><a class=\"anchor\" href=\"#stringbuffer类\">#</a> StringBuffer 类</h4>\n<p><strong>特点：</strong> StringBuffer 是可以被修改的，因此相比于 String 类更加的高效。它是线程同步的。<br />\n<strong>常用方法：</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">StringBuffer</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello，cat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 在原字符串末尾添加上新字符串              </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// 向原来的字符串中指定位置插入字符串    </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 一次性删除指定区间的所有字符串，但补包括索引为 6 的值；</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">deleteCharAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// 一次性删除一个字符，参数为对应索引；          </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 将指定字符串进行反转，得到反序字符串</span></pre></td></tr></table></figure>","categories":["java学习"],"tags":["变量交换","循环控制","String类","StringBuffer类"]},{"title":"Java学习札记二","url":"/Java%E5%AD%A6%E4%B9%A0%E6%9C%AD%E8%AE%B0%E4%BA%8C/","content":"<h4 id=\"类和对象的关系\"><a class=\"anchor\" href=\"#类和对象的关系\">#</a> 类和对象的关系</h4>\n<ul>\n<li>对象是具体的，实实在在存在的，是现实生活中看得见也摸得着的的个体。</li>\n<li>类是抽象的，是现实中很多有共同特性的事物的统称。</li>\n<li>使用对象时需要先实例化，再为其属性赋值，最后调用方法。</li>\n</ul>\n<h4 id=\"类的构造方法\"><a class=\"anchor\" href=\"#类的构造方法\">#</a> 类的构造方法</h4>\n<h5 id=\"构造方法的作用实现局部变量为全局变量简化了对象的赋值操作\"><a class=\"anchor\" href=\"#构造方法的作用实现局部变量为全局变量简化了对象的赋值操作\">#</a> 构造方法的作用：实现局部变量为全局变量（简化了对象的赋值操作）</h5>\n<ol>\n<li>构造方法一般使用 public 修饰。<strong>在单例时会用到 private</strong>。</li>\n<li>构造函数没有返回值，也不能使用 void 修饰。</li>\n<li>构造方法名必须和类名一致。</li>\n<li>一个类在没有任何构造方法的时候，Java 虚拟机会提供一个无参的默认构造函数，但是一旦设置了构造函数，Java 虚拟机将不再提供任何构造方法了，因此一般在自己定义了构造方法的时候，都会添加一条无参的构造函数。</li>\n</ol>\n<h4 id=\"this关键字\"><a class=\"anchor\" href=\"#this关键字\">#</a> this 关键字</h4>\n<ul>\n<li>在构造方法中使用 this 就会，将局部变量的值赋给全局变量，如果没有 this 就会更加系统的就近原则进行赋值。</li>\n<li>this 在构造方法中就代表当前对象。</li>\n<li>可以通过 this（参数）进行调用本类的其他构造方法，但是只能放在调用方法的第一行，因此一个构造方法中只能调用一次其他构造方法。</li>\n</ul>\n<h4 id=\"tostring方法和equals方法\"><a class=\"anchor\" href=\"#tostring方法和equals方法\">#</a> toString () 方法和 equals () 方法</h4>\n<blockquote>\n<ul>\n<li>\n<p><strong>toString () 方法</strong>：  直接打印某个对象时，其实就是调用对象的 toString 方法。因此我经常会在类中重写 toString () 方法，可以简化对对象属性的打印输出。在没有重写的情况下调用父类的 toString () 方法，在没有继承的情况下就调用 Object 类的 toSring 方法，其返回值为： <code>getClass().getName() + &quot;@&quot; + Integer.toHexString(hashCode());</code></p>\n</li>\n<li>\n<p><strong>equals () 方法：</strong> 用于比较两个对象是否为同一个对象，在实际中认为是同一个对象的规则不一样，因此该方法会经常按照我们的对比规则重写。在没有重写的情况下，会调用父类的 equals () 方法，如果没有继承的情况下回调用 Object 类的 equals () 方法，其返回值为： <code>(this == obj)</code> , 而使用 <code>==</code>  对比的是 hashcode。</p>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"java中的访问修饰符\"><a class=\"anchor\" href=\"#java中的访问修饰符\">#</a> Java 中的访问修饰符</h4>\n<ul>\n<li><strong>public：</strong> 表示公共的访问修饰符，用 <code>public</code>  修饰的资源可以在任何位置访问，即<strong>任何位置有效</strong></li>\n<li><strong>protected：</strong> 受保护的，在同一个包下都可以使用；但是在不同包下，只能在父子类继承中使用。</li>\n<li><strong>默认：</strong> 不使用任访问何修饰符修饰，只能同一个包下访问，计<strong>包内有效</strong></li>\n<li><strong>private：</strong> 私有的，表示只有自己能用，也就是<strong>本类有效</strong></li>\n</ul>\n<h4 id=\"面向对象\"><a class=\"anchor\" href=\"#面向对象\">#</a> 面向对象</h4>\n<p><strong>封装：</strong> 将内部实现进行 “黑处理”，也就是使用者不知道其内部实现，也不需要了解其内部实现，只需要按照封装者提供的使用方法便能完成功能。类中的 get 和 set 方法就是一种封装。</p>\n<p><strong>继承：</strong> 通过继承子类可以获得父类的一些属性和方法，使得子类拥有父类的能力。提高了代码的复用性</p>\n<ul>\n<li>在 Java 中继承无处不在，没有使用 extends 继承的类会默认继承 Object 类，因此 Object 是顶级类。</li>\n<li>Java 中的继承是单根继承，即一个类只有一个父类。</li>\n<li>不能继承父类中被 private 修饰的变量、方法，父类的构造方法也不能被继承。</li>\n<li>子类是可以调用父类的构造方法的，使用 super 关键字， <code>super([参数列表])</code>  即可调用父类构造方法，当然也可以通过 <code>super.属性名</code> 访问被 public 和 protected 修饰的属性值，可以通过 super 访问父类中被重写的方法 ()。</li>\n</ul>\n<p><strong>多态：</strong> 一个同名的方法，当传入的参数列表不一样时，体现出不一样的形态，即称为多态，方法重载和方法重写就是多态的一种表现形式。</p>\n","categories":["java学习"],"tags":["类与对象","构造方法","访问修饰符","封装、继承、多态"]},{"title":"Gradle安装","url":"/K8s%E5%AE%89%E8%A3%85/","content":"","categories":["软件安装"],"tags":["gradle"]},{"title":"git常用命令","url":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","content":"<p>一些常用的 git 命令，方便复制使用</p>\n<h3 id=\"配置相关命令\"><a class=\"anchor\" href=\"#配置相关命令\">#</a> 配置相关命令</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config -l  <span class=\"token comment\">#查看所有配置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config --system --list  <span class=\"token comment\">#查看所有系统配置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">git</span> config --global --list  <span class=\"token comment\">#查看所有全局配置</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> config --global user.username  <span class=\"token string\">\"用户名\"</span>  <span class=\"token comment\">#配置用户名</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">git</span> config --global user.email  <span class=\"token string\">\"邮箱\"</span>  <span class=\"token comment\">#配置邮箱</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">git</span> version   <span class=\"token comment\">#查看 git 版本</span></pre></td></tr></table></figure><h3 id=\"操作相关命令\"><a class=\"anchor\" href=\"#操作相关命令\">#</a> 操作相关命令</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone <span class=\"token string\">\"url\"</span>  <span class=\"token comment\">#克隆工程</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token string\">\"fileName\"</span> <span class=\"token comment\">#将修改过的文件添加到暂存区</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">git</span> commit -m <span class=\"token string\">\"提交信息\"</span> <span class=\"token comment\">#将暂存区文件提交</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> status   <span class=\"token comment\">#查看有哪些文件已经修改 哪些文件已经存入暂存区</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">git</span> branch   <span class=\"token comment\">#查看所有本地分支</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">git</span> branch -r  <span class=\"token comment\">#查看所有远程分支</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">git</span> branch dev <span class=\"token comment\">#新建一个本地分支 名为 dev</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">git</span> checkout dev <span class=\"token comment\">#切换到分支 dev</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">git</span> checkout -b dev <span class=\"token comment\">#新建一个分支 并且将 head 指向该分支</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">git</span> branck -d dev  <span class=\"token comment\">#删除分支 dev</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">git</span> merge dev  <span class=\"token comment\">#合并分支到 dev 上</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> <span class=\"token string\">\"name\"</span> <span class=\"token string\">\"url\"</span> <span class=\"token comment\">#与远程仓库关联</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">git</span> push <span class=\"token string\">\"远程仓库\"</span> <span class=\"token string\">\"本地分支名\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"远程分支名\"</span> <span class=\"token comment\">#将当前分支推送到远程分支上</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">git</span> pull <span class=\"token string\">\"远程仓库\"</span>  <span class=\"token string\">\"远程分支\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"本地分支\"</span>   <span class=\"token comment\">#拉取远程分支并且合并入本地分支</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token function\">git</span> pull <span class=\"token string\">\"远程仓库\"</span>  <span class=\"token string\">\"远程分支\"</span>   <span class=\"token comment\">#拉取远程分支并且合并入当前分支</span></pre></td></tr></table></figure>","categories":["git"]},{"title":"Hexo Shoka主题本地搜索","url":"/Shoka%E4%B8%BB%E9%A2%98%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2/","content":"<p>由于 <code>Shoka</code>  作者提供的搜索使用<a href=\"http://localhost:4000/\"> <code>Algolia</code> </a> 实现，但是 Algolia 免费版是有每月请求次数限制的，因此想要使用本地搜索来替换。功夫不负有心人，我在<a href=\"https://linn-ylz.com/Hexo/blog-search-config\"> <code>Shoka</code>  主题的搜索功能配置</a>找到了解决办法，在此感谢<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5uLXlsei5jb20v\"> linn</span> 提供的方法。</p>\n<h2 id=\"问题解决\"><a class=\"anchor\" href=\"#问题解决\">#</a> 问题 &amp; 解决</h2>\n<p>在使用过程中也遇到了一些问题，如 <code>localSearch()</code>  方法报不支持的语法错误，所以在此记录一下各文件的修改情况。</p>\n<h3 id=\"安装插件\"><a class=\"anchor\" href=\"#安装插件\">#</a> 安装插件</h3>\n<p>本地搜索通过 hexo-generator-searchdb 插件实现，需要先安装插件。</p>\n<p><code>npm install hexo-generator-searchdb</code></p>\n<h3 id=\"修改pagejs\"><a class=\"anchor\" href=\"#修改pagejs\">#</a> 修改 page.js</h3>\n<p><code>shoka/source/js/_app/page.js</code>  中 <code>localSearch()</code>  修改后的文件如下，将整个 localSearch 复制到主题的 <code>shoka/source/js/_app/page.js</code>  中即可。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">localSearch</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pjax</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// 参考 hexo next 主题的配置方法</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">// 参考 https://qiuyiwu.github.io/2019/01/25/Hexo-LocalSearch/ 博文</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>localSearch <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>siteSearch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    siteSearch <span class=\"token operator\">=</span> <span class=\"token constant\">BODY</span><span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'search'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token literal-property property\">innerHTML</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;div class=\"inner\">&lt;div class=\"header\">&lt;span class=\"icon\">&lt;i class=\"ic i-search\">&lt;/i>&lt;/span>&lt;div class=\"search-input-container\">&lt;input class=\"search-input\"autocompvare=\"off\"placeholder=\"'</span><span class=\"token operator\">+</span><span class=\"token constant\">LOCAL</span><span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span>placeholder<span class=\"token operator\">+</span><span class=\"token string\">'\"spellcheck=\"false\"type=\"text\"id=\"local-search-input\">&lt;/div>&lt;span class=\"close-btn\">&lt;i class=\"ic i-times-circle\">&lt;/i>&lt;/span>&lt;/div>&lt;div class=\"results\"id=\"search-results\">&lt;div class=\"inner\">&lt;div id=\"search-stats\">&lt;/div>&lt;div id=\"search-hits\">&lt;/div>&lt;div id=\"search-pagination\">&lt;/div>&lt;/div>&lt;/div>&lt;/div>&lt;/div>'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">var</span> isFetched <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">var</span> datas<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">var</span> isXml <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">var</span> current_page <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">var</span> pageSize <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>localSearch<span class=\"token punctuation\">.</span>pageSize<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>pageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> pageSize <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">var</span> total_pages <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">var</span> max_page_on_show <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 一次最多显示 7 个页码</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">var</span> start_page <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">var</span> end_page <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">var</span> resultItems <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\">// search DB path</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">var</span> searchPath <span class=\"token operator\">=</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>localSearch<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>searchPath<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    searchPath <span class=\"token operator\">=</span> <span class=\"token string\">'search.xml'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>searchPath<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    isXml <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.search-input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// document.querySelector('.search-input');</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">const</span> resultContent <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'search-hits'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">const</span> paginationContent <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'search-pagination'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getIndexByWord</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">word<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">,</span> caseSensitive</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>localSearch<span class=\"token punctuation\">.</span>unescape<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      div<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> word<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      word <span class=\"token operator\">=</span> div<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">var</span> wordLen <span class=\"token operator\">=</span> word<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>wordLen <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">var</span> startPosition <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">var</span> position <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>caseSensitive<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      word <span class=\"token operator\">=</span> word<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>position <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">,</span> startPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      index<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span>position<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">word</span><span class=\"token operator\">:</span>word<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      startPosition <span class=\"token operator\">=</span> position <span class=\"token operator\">+</span> wordLen<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">return</span> index<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  <span class=\"token comment\">// Merge hits into slices</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mergeIntoSlice</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> searchText</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">var</span> item <span class=\"token operator\">=</span> index<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">var</span> position <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">var</span> word <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">var</span> hits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">var</span> searchTextCountInSlice <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>position <span class=\"token operator\">+</span> word<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;=</span> end <span class=\"token operator\">&amp;&amp;</span> index<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>word <span class=\"token operator\">===</span> searchText<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        searchTextCountInSlice<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>      hits<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span>position<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> word<span class=\"token punctuation\">.</span>length</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>      <span class=\"token keyword\">var</span> wordEnd <span class=\"token operator\">=</span> position <span class=\"token operator\">+</span> word<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>      <span class=\"token comment\">// Move to next position of hit</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>      index<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        item <span class=\"token operator\">=</span> index<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        position <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        word <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>wordEnd <span class=\"token operator\">></span> position<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>          index<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>      <span class=\"token literal-property property\">hits</span><span class=\"token operator\">:</span>hits<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>      <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span>start<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>      <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span>end<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>      <span class=\"token literal-property property\">searchTextCount</span><span class=\"token operator\">:</span> searchTextCountInSlice</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  <span class=\"token comment\">// Highlight title and content</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">highlightKeyword</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">text<span class=\"token punctuation\">,</span> slice</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token keyword\">var</span> prevEnd <span class=\"token operator\">=</span> slice<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    slice<span class=\"token punctuation\">.</span>hits<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">hit</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>      result <span class=\"token operator\">+=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>prevEnd<span class=\"token punctuation\">,</span> hit<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>      <span class=\"token keyword\">var</span> end <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> hit<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>      result <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;mark>'</span><span class=\"token operator\">+</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>hit<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;/mark>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>      prevEnd <span class=\"token operator\">=</span> end<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    result <span class=\"token operator\">+=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>prevEnd<span class=\"token punctuation\">,</span> slice<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">pagination</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addPrevPage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">current_page</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>      <span class=\"token keyword\">var</span> classContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>      <span class=\"token keyword\">var</span> numberContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>current_page <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        classContent <span class=\"token operator\">=</span> <span class=\"token string\">'#search-pagination pagination-item disabled-item'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        numberContent <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;span class=\"#search-pagination page-number\">&lt;i class=\"ic i-angle-left\">&lt;/i>&lt;/span>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        classContent <span class=\"token operator\">=</span> <span class=\"token string\">'#search-pagination pagination-item'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        numberContent <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;a class=\"#search-pagination page-number\" aria-label=\"Prev\" href=\"#\">&lt;i class=\"ic i-angle-left\">&lt;/i>&lt;/a>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>      <span class=\"token keyword\">var</span> prevPage <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;li class=\"'</span><span class=\"token operator\">+</span> classContent <span class=\"token operator\">+</span><span class=\"token string\">'\" id=\"prev-page\">'</span><span class=\"token operator\">+</span> numberContent<span class=\"token operator\">+</span><span class=\"token string\">'&lt;/li>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>      <span class=\"token keyword\">return</span> prevPage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addNextPage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">current_page</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>      <span class=\"token keyword\">var</span> classContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>      <span class=\"token keyword\">var</span> numberContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>current_page <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> total_pages<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        classContent <span class=\"token operator\">=</span> <span class=\"token string\">'#search-pagination pagination-item disabled-item'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        numberContent <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;span class=\"#search-pagination page-number\">&lt;i class=\"ic i-angle-right\">&lt;/i>&lt;/span>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        classContent <span class=\"token operator\">=</span> <span class=\"token string\">'#search-pagination pagination-item'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        numberContent <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;a class=\"#search-pagination page-number\"aria-label=\"Next\"href=\"#\">&lt;i class=\"ic i-angle-right\">&lt;/i>&lt;/a>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>      <span class=\"token keyword\">var</span> nextPage <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;li class=\"'</span> <span class=\"token operator\">+</span> classContent <span class=\"token operator\">+</span><span class=\"token string\">'\"id=\"next-page\">'</span><span class=\"token operator\">+</span> numberContent <span class=\"token operator\">+</span><span class=\"token string\">'&lt;/li>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>      <span class=\"token keyword\">return</span> nextPage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addPage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index<span class=\"token punctuation\">,</span> current_page</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>      <span class=\"token keyword\">var</span> classContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>      <span class=\"token keyword\">var</span> numberContent <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;a class=\"#search-pagination page-number\"aria-label=\"'</span><span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">'\"href=\"#\">'</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;/a>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">===</span> current_page<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>        classContent <span class=\"token operator\">=</span> <span class=\"token string\">'#search-pagination pagination-item current'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        classContent <span class=\"token operator\">=</span> <span class=\"token string\">'#search-pagination pagination-item'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>      <span class=\"token keyword\">var</span> page <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;li class=\"'</span><span class=\"token operator\">+</span>classContent<span class=\"token operator\">+</span><span class=\"token string\">'\" id=\"page-'</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'\">'</span><span class=\"token operator\">+</span>numberContent<span class=\"token operator\">+</span><span class=\"token string\">'&lt;/li>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>      <span class=\"token keyword\">return</span> page<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addPaginationEvents</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">start_page<span class=\"token punctuation\">,</span> end_page</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>total_pages <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>      <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onPrevPageClick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>current_page <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>          current_page <span class=\"token operator\">-=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>current_page <span class=\"token operator\">&lt;</span> start_page<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>          start_page <span class=\"token operator\">=</span> current_page<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>          end_page <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>end_page<span class=\"token punctuation\">,</span> start_page <span class=\"token operator\">+</span> max_page_on_show<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>        <span class=\"token function\">pagination</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>      <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onNextPageClick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>current_page <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> total_pages<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>          current_page <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>current_page <span class=\"token operator\">></span> end_page<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>          end_page <span class=\"token operator\">=</span> current_page<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>          start_page <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> end_page <span class=\"token operator\">-</span> max_page_on_show<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        <span class=\"token function\">pagination</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>      <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onPageClick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>        <span class=\"token keyword\">var</span> page_number <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>ariaLabel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>        current_page <span class=\"token operator\">=</span> page_number <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// note minus 1 here</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>        <span class=\"token function\">pagination</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"188\"></td><td><pre>      <span class=\"token keyword\">var</span> prevPage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'prev-page'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>prevPage <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>prevPage<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> onPrevPageClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"191\"></td><td><pre>      <span class=\"token keyword\">var</span> nextPage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'next-page'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nextPage <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> nextPage<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> onNextPageClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> start_page<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> end_page<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>        <span class=\"token keyword\">var</span> page <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page-'</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>page <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> onPageClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"199\"></td><td><pre></pre></td></tr><tr><td data-num=\"200\"></td><td><pre></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>    paginationContent<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// clear</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"203\"></td><td><pre>    <span class=\"token keyword\">var</span> begin_index <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>current_page <span class=\"token operator\">*</span> pageSize<span class=\"token punctuation\">,</span> resultItems<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>    <span class=\"token keyword\">var</span> end_index <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>begin_index <span class=\"token operator\">+</span> pageSize<span class=\"token punctuation\">,</span> resultItems<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>    resultContent<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> resultItems<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>begin_index<span class=\"token punctuation\">,</span> end_index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"208\"></td><td><pre>    start_page <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> total_pages <span class=\"token operator\">-</span> max_page_on_show<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>    end_page <span class=\"token operator\">=</span> start_page <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>total_pages<span class=\"token punctuation\">,</span> max_page_on_show<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>    <span class=\"token keyword\">var</span> pageContent <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;div class=\"#search-pagination\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>    pageContent <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;div class=\"#search-pagination pagination\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>    pageContent <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;ul>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>total_pages <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>      <span class=\"token comment\">// add prev page arrow, when no prev page not selectable</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>      pageContent <span class=\"token operator\">+=</span> <span class=\"token function\">addPrevPage</span><span class=\"token punctuation\">(</span>current_page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> start_page<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> end_page<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>        pageContent <span class=\"token operator\">+=</span> <span class=\"token function\">addPage</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> current_page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>      <span class=\"token comment\">// add next page arrow, when no next page not selectable</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>      pageContent <span class=\"token operator\">+=</span> <span class=\"token function\">addNextPage</span><span class=\"token punctuation\">(</span>current_page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>    pageContent <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;/ul>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>    pageContent <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;/div>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>    pageContent <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;/div>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>    paginationContent<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> pageContent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>    <span class=\"token function\">addPaginationEvents</span><span class=\"token punctuation\">(</span>start_page<span class=\"token punctuation\">,</span> end_page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>    resultContent<span class=\"token punctuation\">.</span>scrollTop <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// scroll to top</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>    window<span class=\"token punctuation\">.</span>pjax <span class=\"token operator\">&amp;&amp;</span> window<span class=\"token punctuation\">.</span>pjax<span class=\"token punctuation\">.</span><span class=\"token function\">refresh</span><span class=\"token punctuation\">(</span>resultContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre></pre></td></tr><tr><td data-num=\"231\"></td><td><pre></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"233\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">inputEventFunction</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isFetched<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Data not fetched.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>    <span class=\"token keyword\">var</span> searchText <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>    <span class=\"token keyword\">var</span> keywords <span class=\"token operator\">=</span> searchText<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[-\\s]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"242\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>keywords<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>      keywords<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>searchText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"246\"></td><td><pre>    resultItems <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>searchText<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>      <span class=\"token comment\">// Perform local searching</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>      datas<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"251\"></td><td><pre>        <span class=\"token keyword\">var</span> categories <span class=\"token operator\">=</span> index<span class=\"token punctuation\">.</span>categories<span class=\"token punctuation\">,</span> title<span class=\"token operator\">=</span>index<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span>index<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span> url<span class=\"token operator\">=</span>index<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>        <span class=\"token keyword\">var</span> titleInLowerCase <span class=\"token operator\">=</span> title<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>        <span class=\"token keyword\">var</span> contentInLowerCase <span class=\"token operator\">=</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>        <span class=\"token keyword\">var</span> indexOfTitle <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>        <span class=\"token keyword\">var</span> indexOfContent <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>        <span class=\"token keyword\">var</span> searchTextCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>        keywords<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">keyword</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>          indexOfTitle <span class=\"token operator\">=</span> indexOfTitle<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIndexByWord</span><span class=\"token punctuation\">(</span>keyword<span class=\"token punctuation\">,</span> titleInLowerCase<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>          indexOfContent <span class=\"token operator\">=</span> indexOfContent<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIndexByWord</span><span class=\"token punctuation\">(</span>keyword<span class=\"token punctuation\">,</span> contentInLowerCase<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"262\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"263\"></td><td><pre>        <span class=\"token comment\">// Show search results</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>indexOfTitle<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> indexOfContent<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>          <span class=\"token keyword\">var</span> hitCount <span class=\"token operator\">=</span> indexOfTitle<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> indexOfContent<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>          <span class=\"token comment\">// Sort index by position of keyword</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>          <span class=\"token punctuation\">[</span>indexOfTitle<span class=\"token punctuation\">,</span> indexOfContent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>            index<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">itemLeft<span class=\"token punctuation\">,</span> itemRight</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>itemRight<span class=\"token punctuation\">.</span>position <span class=\"token operator\">!==</span> itemLeft<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>                <span class=\"token keyword\">return</span> itemRight<span class=\"token punctuation\">.</span>position <span class=\"token operator\">-</span> itemLeft<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>              <span class=\"token keyword\">return</span> itemLeft<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> item<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>          <span class=\"token keyword\">var</span> slicesOfTitle <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>indexOfTitle<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>            <span class=\"token keyword\">var</span> tmp <span class=\"token operator\">=</span> <span class=\"token function\">mergeIntoSlice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> indexOfTitle<span class=\"token punctuation\">,</span> searchText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>            searchTextCount <span class=\"token operator\">+=</span> tmp<span class=\"token punctuation\">.</span>searchTextCountInSlice<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>            slicesOfTitle<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"283\"></td><td><pre>          <span class=\"token keyword\">var</span> slicesOfContent <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>          <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>indexOfContent<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>            <span class=\"token keyword\">var</span> item <span class=\"token operator\">=</span> indexOfContent<span class=\"token punctuation\">[</span>indexOfContent<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>            <span class=\"token keyword\">var</span> position <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>            <span class=\"token keyword\">var</span> word <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>            <span class=\"token comment\">// Cut out 100 characters</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>            <span class=\"token keyword\">var</span> start <span class=\"token operator\">=</span> position <span class=\"token operator\">-</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>            <span class=\"token keyword\">var</span> end <span class=\"token operator\">=</span> position <span class=\"token operator\">+</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>              start <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">&lt;</span> position <span class=\"token operator\">+</span> word<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>              end <span class=\"token operator\">=</span> position <span class=\"token operator\">+</span> word<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">></span> content<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>              end <span class=\"token operator\">=</span> content<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>            <span class=\"token keyword\">var</span> tmp <span class=\"token operator\">=</span> <span class=\"token function\">mergeIntoSlice</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">,</span> indexOfContent<span class=\"token punctuation\">,</span> searchText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>            searchTextCount <span class=\"token operator\">+=</span> tmp<span class=\"token punctuation\">.</span>searchTextCountInSlice<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>            slicesOfContent<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"305\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"306\"></td><td><pre>          <span class=\"token comment\">// Sort slices in content by search text's count and hits' count</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>          slicesOfContent<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sliceLeft<span class=\"token punctuation\">,</span> sliceRight</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sliceLeft<span class=\"token punctuation\">.</span>searchTextCount <span class=\"token operator\">!==</span> sliceRight<span class=\"token punctuation\">.</span>searchTextCount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre>              <span class=\"token keyword\">return</span> sliceRight<span class=\"token punctuation\">.</span>searchTextCount <span class=\"token operator\">-</span> sliceLeft<span class=\"token punctuation\">.</span>searchTextCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sliceLeft<span class=\"token punctuation\">.</span>hits<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> sliceRight<span class=\"token punctuation\">.</span>hits<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>              <span class=\"token keyword\">return</span> sliceRight<span class=\"token punctuation\">.</span>hits<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> sliceLeft<span class=\"token punctuation\">.</span>hits<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>            <span class=\"token keyword\">return</span> sliceLeft<span class=\"token punctuation\">.</span>start <span class=\"token operator\">-</span> sliceRight<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>          <span class=\"token comment\">// Select top N slices in content</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>          <span class=\"token keyword\">var</span> upperBound <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>localSearch<span class=\"token punctuation\">.</span>pageSize<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>upperBound <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>            slicesOfContent <span class=\"token operator\">=</span> slicesOfContent<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> upperBound<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre></pre></td></tr><tr><td data-num=\"322\"></td><td><pre></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>          <span class=\"token keyword\">var</span> resultItem <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>          resultItem <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;div class=\"#search-hits item\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>          <span class=\"token comment\">// resultItem += '&lt;div class=\"#search-hits\">';</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre>          <span class=\"token comment\">// resultItem += '&lt;ol class=\"item\">'</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre>          resultItem <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li>'</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>          <span class=\"token comment\">// resultItem += '&lt;li>';</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre>          <span class=\"token keyword\">var</span> cats <span class=\"token operator\">=</span> categories <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">?</span> <span class=\"token string\">'&lt;span>'</span> <span class=\"token operator\">+</span> categories<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;i class=\"ic i-angle-right\">&lt;/i>'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/span>'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'&lt;span>No categories&lt;/span>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"330\"></td><td><pre>          resultItem <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;a href=\"'</span><span class=\"token operator\">+</span>url<span class=\"token operator\">+</span><span class=\"token string\">'\">'</span> <span class=\"token operator\">+</span> cats<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>slicesOfTitle<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>            <span class=\"token comment\">// resultItem += '&lt;li>&lt;a href=\"'+url&#125;\">'+highlightKeyword(title, slicesOfTitle[0])&#125;&lt;/a>';</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>            resultItem <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;b>'</span><span class=\"token operator\">+</span><span class=\"token function\">highlightKeyword</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> slicesOfTitle<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;/b>&lt;br>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>            <span class=\"token comment\">// resultItem += '&lt;li>&lt;a href=\"'+url&#125;\">'+title&#125;&lt;/a>';</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre>            resultItem <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;b>'</span><span class=\"token operator\">+</span>title<span class=\"token operator\">+</span><span class=\"token string\">'&lt;/b>&lt;br>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"337\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"338\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"339\"></td><td><pre>          slicesOfContent<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">slice</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"340\"></td><td><pre>            <span class=\"token keyword\">return</span> resultItem <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li class=\"#search-hits subitem\">'</span><span class=\"token operator\">+</span><span class=\"token function\">highlightKeyword</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> slice<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">' ...&lt;/li>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre>          <span class=\"token comment\">// resultItem += '&lt;/li>';</span></pre></td></tr><tr><td data-num=\"343\"></td><td><pre>          resultItem <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;/a>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"344\"></td><td><pre>          resultItem <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;/li>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>          <span class=\"token comment\">// resultItem += '&lt;/ol>';</span></pre></td></tr><tr><td data-num=\"346\"></td><td><pre>          resultItem <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;/div>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"347\"></td><td><pre>          resultItems<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>            <span class=\"token literal-property property\">item</span><span class=\"token operator\">:</span> resultItem<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>            <span class=\"token literal-property property\">id</span>  <span class=\"token operator\">:</span> resultItems<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre>            <span class=\"token literal-property property\">hitCount</span><span class=\"token operator\">:</span>hitCount<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>            <span class=\"token literal-property property\">searchTextCount</span><span class=\"token operator\">:</span>searchTextCount</pre></td></tr><tr><td data-num=\"352\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"354\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"356\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"357\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>keywords<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> keywords<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre>      resultContent<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;div id=\"no-result\">&lt;i>&lt;/i>&lt;/div>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"359\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resultItems<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"360\"></td><td><pre>      resultContent<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;div id=\"no-result\">&lt;i>&lt;/i>&lt;/div>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"362\"></td><td><pre>      resultItems<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resultLeft<span class=\"token punctuation\">,</span> resultRight</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"363\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resultLeft<span class=\"token punctuation\">.</span>searchTextCount <span class=\"token operator\">!==</span> resultRight<span class=\"token punctuation\">.</span>searchTextCount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"364\"></td><td><pre>          <span class=\"token keyword\">return</span> resultRight<span class=\"token punctuation\">.</span>searchTextCount <span class=\"token operator\">-</span> resultLeft<span class=\"token punctuation\">.</span>searchTextCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resultLeft<span class=\"token punctuation\">.</span>hitCount <span class=\"token operator\">!==</span> resultRight<span class=\"token punctuation\">.</span>hitCount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"366\"></td><td><pre>          <span class=\"token keyword\">return</span> resultRight<span class=\"token punctuation\">.</span>hitCount <span class=\"token operator\">-</span> resultLeft<span class=\"token punctuation\">.</span>hitCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"368\"></td><td><pre>        <span class=\"token keyword\">return</span> resultRight<span class=\"token punctuation\">.</span>id <span class=\"token operator\">-</span> resultLeft<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"369\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"370\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"371\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"372\"></td><td><pre>    <span class=\"token comment\">// Do pagination</span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>    total_pages <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>resultItems<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> pageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>    <span class=\"token function\">pagination</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"378\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"379\"></td><td><pre>    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>root <span class=\"token operator\">+</span> searchPath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"380\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre>        <span class=\"token comment\">// Get the contents from search data</span></pre></td></tr><tr><td data-num=\"383\"></td><td><pre>        isFetched <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"384\"></td><td><pre>        datas <span class=\"token operator\">=</span> isXml <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> <span class=\"token string\">'text/xml'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'entry'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"386\"></td><td><pre>            <span class=\"token literal-property property\">title</span>  <span class=\"token operator\">:</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"387\"></td><td><pre>            <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"388\"></td><td><pre>            <span class=\"token literal-property property\">url</span>    <span class=\"token operator\">:</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent</pre></td></tr><tr><td data-num=\"389\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"390\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"391\"></td><td><pre>        <span class=\"token comment\">// Only match articles with not empty titles</span></pre></td></tr><tr><td data-num=\"392\"></td><td><pre>        datas <span class=\"token operator\">=</span> datas<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> data<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"393\"></td><td><pre>          data<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"394\"></td><td><pre>          data<span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>content <span class=\"token operator\">?</span> data<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;[^>]+></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"395\"></td><td><pre>          data<span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> <span class=\"token function\">decodeURIComponent</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/&#123;2,&#125;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"396\"></td><td><pre>          <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"397\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"398\"></td><td><pre>        <span class=\"token comment\">// Remove loading animation</span></pre></td></tr><tr><td data-num=\"399\"></td><td><pre>        document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'search-hits'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;i>&lt;/i>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"400\"></td><td><pre>        <span class=\"token function\">inputEventFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"401\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"402\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"403\"></td><td><pre></pre></td></tr><tr><td data-num=\"404\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>localSearch<span class=\"token punctuation\">.</span>preload<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"405\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fetch data.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"406\"></td><td><pre>    <span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"407\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre></pre></td></tr><tr><td data-num=\"409\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>localSearch<span class=\"token punctuation\">.</span>trigger <span class=\"token operator\">===</span> <span class=\"token string\">'auto'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"410\"></td><td><pre>    input<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> inputEventFunction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"411\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"412\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.search-icon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> inputEventFunction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"413\"></td><td><pre>    input<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keypress'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"414\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'Enter'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"415\"></td><td><pre>        <span class=\"token function\">inputEventFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"416\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"417\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"418\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"419\"></td><td><pre></pre></td></tr><tr><td data-num=\"420\"></td><td><pre>  <span class=\"token comment\">// Handle and trigger popup window</span></pre></td></tr><tr><td data-num=\"421\"></td><td><pre>  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.popup-trigger'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"422\"></td><td><pre>    element<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"423\"></td><td><pre>      document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>overflow <span class=\"token operator\">=</span> <span class=\"token string\">'hidden'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"424\"></td><td><pre>      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.search-pop-overlay'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'search-active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"425\"></td><td><pre>      input<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"426\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isFetched<span class=\"token punctuation\">)</span> <span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"427\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"428\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"429\"></td><td><pre></pre></td></tr><tr><td data-num=\"430\"></td><td><pre>  <span class=\"token comment\">// Handle and trigger popup window</span></pre></td></tr><tr><td data-num=\"431\"></td><td><pre>  $<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.search'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"432\"></td><td><pre>    element<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"433\"></td><td><pre>      document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>overflow <span class=\"token operator\">=</span> <span class=\"token string\">'hidden'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"434\"></td><td><pre>      <span class=\"token function\">transition</span><span class=\"token punctuation\">(</span>siteSearch<span class=\"token punctuation\">,</span> <span class=\"token string\">'shrinkIn'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"435\"></td><td><pre>          <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.search-input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"436\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// transition.shrinkIn</span></pre></td></tr><tr><td data-num=\"437\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"438\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"439\"></td><td><pre></pre></td></tr><tr><td data-num=\"440\"></td><td><pre>  <span class=\"token comment\">// Monitor main search box</span></pre></td></tr><tr><td data-num=\"441\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onPopupClose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"442\"></td><td><pre>    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>overflow <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"443\"></td><td><pre>    <span class=\"token function\">transition</span><span class=\"token punctuation\">(</span>siteSearch<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"transition.shrinkOut\"</span></pre></td></tr><tr><td data-num=\"444\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"445\"></td><td><pre></pre></td></tr><tr><td data-num=\"446\"></td><td><pre>  siteSearch<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"447\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target <span class=\"token operator\">===</span> siteSearch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"448\"></td><td><pre>      <span class=\"token function\">onPopupClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"449\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"450\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"451\"></td><td><pre></pre></td></tr><tr><td data-num=\"452\"></td><td><pre>  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.close-btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> onPopupClose<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"453\"></td><td><pre>  window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pjax:success'</span><span class=\"token punctuation\">,</span> onPopupClose<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"454\"></td><td><pre>  window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keyup'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"455\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'Escape'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"456\"></td><td><pre>      <span class=\"token function\">onPopupClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"457\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"458\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"459\"></td><td><pre></pre></td></tr><tr><td data-num=\"460\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"修改scriptjs\"><a class=\"anchor\" href=\"#修改scriptjs\">#</a> 修改 script.js</h3>\n<p><code>shoka/scripts/generaters/script.js</code>  中主要是读取配置，添加如下代码</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token comment\">// 省略若干代码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>algolia<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    siteConfig<span class=\"token punctuation\">.</span>search <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token literal-property property\">appID</span>    <span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>algolia<span class=\"token punctuation\">.</span>appId<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token literal-property property\">apiKey</span>   <span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>algolia<span class=\"token punctuation\">.</span>apiKey<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token literal-property property\">indexName</span><span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>algolia<span class=\"token punctuation\">.</span>indexName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token literal-property property\">hits</span>     <span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span>hits</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 以下为需要添加的代码</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    siteConfig<span class=\"token punctuation\">.</span>localSearch <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token literal-property property\">enable</span><span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span>enable<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token literal-property property\">field</span><span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span>field<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token literal-property property\">limit</span><span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span>limit<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token literal-property property\">unescape</span><span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span>unescape<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token literal-property property\">preload</span><span class=\"token operator\">:</span>  config<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span>preload<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token literal-property property\">trigger</span><span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span>trigger<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token literal-property property\">pageSize</span><span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span>pageSize</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"修改pjaxjs\"><a class=\"anchor\" href=\"#修改pjaxjs\">#</a> 修改 pjax.js</h3>\n<p><code>shoka/source/js/_app/pjax.js</code>  中是启动搜索功能的部分，这里在两个配置都有的情况下默认使用本地搜索而不是 <code>Algolia</code></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>localSearch <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">localSearch</span><span class=\"token punctuation\">(</span>pjax<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>search <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">algoliaSearch</span><span class=\"token punctuation\">(</span>pjax<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"添加配置\"><a class=\"anchor\" href=\"#添加配置\">#</a> 添加配置</h3>\n<p>最后在 <code>hexo</code>  配置（最外层的 <code>_config.yml</code> ）中添加 search 配置，就大功告成了！</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">search</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> search.json <span class=\"token comment\"># search.xml</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">field</span><span class=\"token punctuation\">:</span> post</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">format</span><span class=\"token punctuation\">:</span> html</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10000</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">unescape</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">preload</span><span class=\"token punctuation\">:</span>  <span class=\"token boolean important\">true</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">trigger</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"auto\"</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">pageSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span></pre></td></tr></table></figure><h2 id=\"效果如下\"><a class=\"anchor\" href=\"#效果如下\">#</a> 效果如下</h2>\n<p><img data-src=\"https://gcore.jsdelivr.net/gh/lemonmanzz/pic/643550850d2dde5777bf274c.png\" alt=\"\" /></p>\n","categories":["hexo","shoka"],"tags":["搜索","本地搜索","hexo","shoka"]},{"title":"nvm的安装与使用","url":"/nvm%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/","content":"<p>在开发过程中，有时候需要使用到多个版本的 nodejs，有时候因为版本不兼容的问题可能会搞出很多奇怪的问题，因此就有了 nvm 来解决这个问题。nvm 的作用就是提供了对 nodejs 的版本管理。</p>\n<h3 id=\"下载\"><a class=\"anchor\" href=\"#下载\">#</a> 下载</h3>\n<p>建议使用安装版，因为会自动帮你配置好环境变量，哈哈哈哈。懒！！！</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9udm0udWlodG0uY29tL2Rvd25sb2FkLmh0bWw=\">NVM 下载 - NVM 中文网 </span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvcmV5YnV0bGVyL252bS13aW5kb3dzL3JlbGVhc2Vz\">NVM-github</span></li>\n</ul>\n<h3 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h3>\n<ol>\n<li>\n<p>如果原来已经安装了 nodejs，那么首先卸载掉它。</p>\n</li>\n<li>\n<p>直接运行下载的 exe 文件。</p>\n</li>\n<li>\n<p>选择安装的路径。<strong>PS: 路径中不能含有空格或者中文，不然后面 use 的时候可能会报乱码</strong></p>\n</li>\n<li>\n<p>检查是否按照成功（如果是非安装版需要自己配置环境变量）</p>\n</li>\n</ol>\n<p><img data-src=\"https://gcore.jsdelivr.net/gh/lemonmanzz/pic/nvm%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%8C%89%E7%85%A7%E6%88%90%E5%8A%9F.png\" alt=\"\" /></p>\n<h3 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h3>\n<ol>\n<li>\n<p>查看可安装的 node 版本列表</p>\n<blockquote>\n<p>nvm list available</p>\n</blockquote>\n<p><img data-src=\"https://gcore.jsdelivr.net/gh/lemonmanzz/pic/nvm%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%8F%AF%E5%AE%89%E8%A3%85%E5%88%97%E8%A1%A8.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>安装某个版本</p>\n<blockquote>\n<p>nvm install 18.16.0</p>\n</blockquote>\n<p><img data-src=\"https://gcore.jsdelivr.net/gh/lemonmanzz/pic/nvm%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E5%AE%89%E8%A3%85node.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>使用 node</p>\n<blockquote>\n<p>nvm use 18.16.0</p>\n<p>提示 Now using node v18.16.0 (64-bit) 表示使用成功</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"常用命令\"><a class=\"anchor\" href=\"#常用命令\">#</a> 常用命令</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nvm list available  <span class=\"token comment\"># 查看可安装的版本</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>nvm <span class=\"token function\">install</span> latest  <span class=\"token comment\">#安装最新版</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>nvm <span class=\"token function\">install</span> <span class=\"token number\">18.16</span>.0 <span class=\"token comment\">#安装某个版本</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>nvm list            <span class=\"token comment\"># 查看已经安装的版本</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>nvm <span class=\"token function\">ls</span>              <span class=\"token comment\">#查看已安装版本</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>nvm use <span class=\"token number\">18.16</span>.0     <span class=\"token comment\">#切换到某个版本</span></pre></td></tr></table></figure>","categories":["nodejs","nvm"],"tags":["nodejs","nvm"]},{"title":"使用dynamic-datasource遇到的几个小问题","url":"/%E4%BD%BF%E7%94%A8dynamic-datasource%E9%81%87%E5%88%B0%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/","content":"<h4 id=\"修改连接池配置不生效\"><a class=\"anchor\" href=\"#修改连接池配置不生效\">#</a> 修改连接池配置不生效</h4>\n<p>今天修改连接池配置发现修改没有反应，最后发现原因是配置的连接池配置有问题。对于使用 dynamic-datasource 来说，需要配置 spring.datasource.dynamic.xx 连接池。属性，而不是配置 spring.datasource.xx 连接池。属性。在创建连接池配置的时候会使用 dynamic 下的配置类去初始化。本人的是<strong> Hikari</strong> 连接池，所以这里会使用 HikariCpConfig 去加载配置，是原来 HikariConfig 在属性上 copy；</p>\n<h5 id=\"hikaricpconfig\"><a class=\"anchor\" href=\"#hikaricpconfig\">#</a> HikariCpConfig</h5>\n<p><img data-src=\"https://gcore.jsdelivr.net/gh/lemonmanzz/pic/6435511f0d2dde5777bfe100.png\" alt=\"\" /></p>\n<h5 id=\"hikariconfig\"><a class=\"anchor\" href=\"#hikariconfig\">#</a> HikariConfig</h5>\n<p><img data-src=\"https://gcore.jsdelivr.net/gh/lemonmanzz/pic/6435511a0d2dde5777bfdb36.png\" alt=\"\" /></p>\n<p>需要注意的是前者使用 lombok 生成的 get 与 set，因此在配置时两者是不一样的，如上图中的</p>\n<p>maxPoolSize 与 maximumPoolSize。类似的还有 minIdle 与 minimumIdle。到此配置不生效的问题解决～</p>\n<h4 id=\"数据库连接加密方式自定义\"><a class=\"anchor\" href=\"#数据库连接加密方式自定义\">#</a> 数据库连接加密方式自定义</h4>\n<p>对于 mybatis-plus 中对数据库连接的 url、username、password 等等配置参数的加解密，或者别的初始化处理。<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2FuY2xvdWQuY24vdHJhY3k1NTQ2L2R5bmFtaWMtZGF0YXNvdXJjZS8yMjY0NjEx\">官方是有推荐的方式加解密</span>，也很方便，但是奈何咱们这边需要使用自己加解密。我看到了原来的实现是通过注入<strong> YmlDataSourceProvider</strong> 来实现，不过因为默认就会加载一次，然后再注入一个 provider 会导致加载两次，出现数据库连接数翻倍的情况！解决是通过如下方式注入一个实现<strong> DynamicDataSourcePropertiesCustomizer</strong> 接口的 Bean，用来完成初始化。</p>\n<p><img data-src=\"https://gcore.jsdelivr.net/gh/lemonmanzz/pic/643551250d2dde5777bfea2d.png\" alt=\"\" /></p>\n","categories":["mybatis"],"tags":["dynamic-datasource","数据源配置","连接池配置"]},{"title":"使用hexo+github搭建属于自己的个人博客！","url":"/%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%81/","content":"<p>hexo+github 的个人博客搭建，参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly94ZG9uZy5tZS8yMDE3LzA5LzA5L2hleG8rZ2l0aHViJUU2JTkwJUFEJUU1JUJCJUJBJUU4JTg3JUFBJUU1JUI3JUIxJUU3JTlBJTg0JUU1JThEJTlBJUU1JUFFJUEyLw==\"> Hiccup</span>。本文仅表明本人在搭建过程中遇到的问题，以下是我在使用 hexo + github 搭建个人博客的时候遇到问题及其解决办法。</p>\n<h3 id=\"准备工作\"><a class=\"anchor\" href=\"#准备工作\">#</a> 准备工作</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9naXQvZ2l0LWluc3RhbGwtc2V0dXAuaHRtbA==\">安装 git</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9ub2RlanMvbm9kZWpzLWluc3RhbGwtc2V0dXAuaHRtbA==\">安装 nodejs</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLw==\">申请一个 github 账号</span></li>\n</ul>\n<h3 id=\"安装hexo\"><a class=\"anchor\" href=\"#安装hexo\">#</a> 安装 Hexo</h3>\n<ol>\n<li>创建任意目录以作为博客的根目录，如 blog</li>\n<li>进行目录，右键 Git Bash 或者使用 cmd 命令打开终端窗口。</li>\n<li>使用命令 <code>npm install -g hexo</code>  安装 hexo</li>\n<li>然后使用命令 <code>hexo init</code>  进行初始化。</li>\n</ol>\n<p>​\t完成上诉步骤后，一个原始主题的 hexo 便可以正常运行起来了。可以通过 <code>hexo s</code>  启动服务，网页访问如下</p>\n<p><img data-src=\"https://gcore.jsdelivr.net/gh/lemonmanzz/pic/643551870d2dde5777c0592d.jpg\" alt=\"\" /></p>\n<h3 id=\"部署github\"><a class=\"anchor\" href=\"#部署github\">#</a> 部署 github</h3>\n<p>为了方便后续部署，建议配置 git 的 ssh</p>\n<h4 id=\"git-配置ssh\"><a class=\"anchor\" href=\"#git-配置ssh\">#</a> git 配置 ssh</h4>\n<p>1. 配置用户名称与邮箱</p>\n<blockquote>\n<p>设置 Git 的 username 和 email (替换为自己的用户名和邮箱)：<br />\n <code>git config --global user.name &quot;username&quot;</code> <br />\n <code>git config --global user.email &quot;email&quot;</code></p>\n</blockquote>\n<p>2. 生成 SSH 密钥过程</p>\n<blockquote>\n<p><code>ssh-keygen -t rsa -C “email”</code></p>\n<p>执行上面命令后有几个需要用户输入的参数，新手直接默认回车就行。</p>\n<p>执行成功后，会在你的 **c:/ 用户 / 当前登录账户名 /.ssh/** 目录下生成两个文件，分别是 id_rsa 和 id_rsa.pub</p>\n</blockquote>\n<p>3. 添加 ssh key</p>\n<blockquote>\n<ol>\n<li>\n<p>登录自己之前注册的 github 账号</p>\n</li>\n<li>\n<p>然后点击右上角的头像，选择<strong> Settings</strong></p>\n</li>\n<li>\n<p>选中<strong> SSH and GPG keys</strong></p>\n</li>\n<li>\n<p>点击<strong> New SSH key</strong>，将上面生成的 id_rsa.pub 的内容复制进来，点击<strong> Add SSH key</strong> 就 ok 啦</p>\n</li>\n<li>\n<p>在本机使用 <code>ssh -T git@github.com</code>  来测试是否配置成功，出现 **Hi {你的 github 名字}! You've successfully authenticated, but GitHub does not provide shell access.** 则表示配置成功</p>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"hexo部署github\"><a class=\"anchor\" href=\"#hexo部署github\">#</a> hexo 部署 github</h4>\n<ol>\n<li>创建一个 public 的仓库，并且命名为: <strong><span class=\"exturl\" data-url=\"aHR0cDovL3VzZXJuYW1lLmdpdGh1Yi5pbw==\">username.github.io</span></strong>, 注意这里的 username 需要替换为你自己真是 username。</li>\n<li>打开博客根目录下的 **_config.yml**，设置 deploy 配置，如下：（图中的 lemonman1 应该是你自己的 username）</li>\n</ol>\n<p><img data-src=\"https://gcore.jsdelivr.net/gh/lemonmanzz/pic/hexo-deploy.png\" alt=\"\" /></p>\n<ol start=\"3\">\n<li>\n<p>部署到 github</p>\n<blockquote>\n<p>使用部署命令</p>\n<p>hexo d</p>\n</blockquote>\n</li>\n<li>\n<p>部署成功后访问<strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly91c2VybmFtZS5naXRodWIuaW8v\"> https://username.github.io/</span></strong> 就可以访问自己的个人博客啦。</p>\n</li>\n</ol>\n<h3 id=\"可能遇见的问题及解决方法\"><a class=\"anchor\" href=\"#可能遇见的问题及解决方法\">#</a> 可能遇见的问题及解决方法</h3>\n<h4 id=\"npm不可用\"><a class=\"anchor\" href=\"#npm不可用\">#</a> npm 不可用</h4>\n<blockquote>\n<p>使用<span class=\"exturl\" data-url=\"aHR0cDovL25wbS50YW9iYW8ub3JnLw==\">淘宝镜像</span>进行解决，配置淘宝源或者安装 cnpm</p>\n<p>配置源</p>\n<p><code>npm config set registry https://registry.npm.taobao.org</code></p>\n<p>安装 cnpm<br />\n <code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p>\n<p>使用 cnpm, 也就是将原本的 npm 替换为 cnpm 即可，如下</p>\n<p><code>cnpm install</code></p>\n</blockquote>\n<h4 id=\"hexo-serverhexo-s不成功\"><a class=\"anchor\" href=\"#hexo-serverhexo-s不成功\">#</a> hexo server (hexo s) 不成功</h4>\n<blockquote>\n<p>hexo 3 以后需要手动安装 hexo server<br />\n <code>npm install hexo-server --save</code></p>\n</blockquote>\n<h4 id=\"白板cannot-get\"><a class=\"anchor\" href=\"#白板cannot-get\">#</a> 白板 + Cannot GET /</h4>\n<blockquote>\n<p>由于版本的更新，可能需要自己手动配置一些东西，输入以下三条命令以解决。<br />\n <code>npm install hexo-renderer-ejs --save</code> <br />\n <code>npm install hexo-renderer-stylus --save</code> <br />\n <code>npm install hexo-renderer-marked --save</code></p>\n</blockquote>\n<h4 id=\"配置后依然还是cannot-get\"><a class=\"anchor\" href=\"#配置后依然还是cannot-get\">#</a> 配置后依然还是 <code>Cannot GET / </code></h4>\n<blockquote>\n<p>有时候修改了问题，可能需要删除 node_modules 目录后重新  <code>npm install</code>  一下</p>\n</blockquote>\n<h4 id=\"hexo-deployhexo-d不执行或者报错\"><a class=\"anchor\" href=\"#hexo-deployhexo-d不执行或者报错\">#</a> hexo deploy (hexo d) 不执行或者报错</h4>\n<blockquote>\n<p>可能是确实 deployer 插件直接安装即可</p>\n<p><code>npm install hexo-deployer-git -–save</code></p>\n</blockquote>\n<h3 id=\"其他\"><a class=\"anchor\" href=\"#其他\">#</a> 其他</h3>\n<h4 id=\"主题\"><a class=\"anchor\" href=\"#主题\">#</a> 主题</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy8=\">Themes | Hexo</span></p>\n<p>↑可以在这上面找到心仪的那个那个主题哦！</p>\n<h4 id=\"常用的hexo命令\"><a class=\"anchor\" href=\"#常用的hexo命令\">#</a> 常用的 hexo 命令</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo cl  <span class=\"token comment\">#清除生成的静态文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo g   <span class=\"token comment\">#生成静态文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hexo s   <span class=\"token comment\">#启动本地预览</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>hexo d   <span class=\"token comment\">#远程部署</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>hexo new <span class=\"token punctuation\">[</span>layout<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span> <span class=\"token comment\">#新建一篇文章</span></pre></td></tr></table></figure><p>更多指令可前往<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvY29tbWFuZHMuaHRtbA==\">指令 | Hexo</span> 查看更多。</p>\n","categories":["hexo"],"tags":["hexo","github","博客"]},{"title":"浮点数精度丢失问题","url":"/%E6%B5%AE%E7%82%B9%E6%95%B0%E7%B2%BE%E5%BA%A6%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98/","content":"<h3 id=\"十进制小数用二进制如何表示\"><a class=\"anchor\" href=\"#十进制小数用二进制如何表示\">#</a> 十进制小数用二进制如何表示</h3>\n<p>在小数转换为二进制时候，整数部分通过除以 2 递归的方式转为二进制表示，而小数部分可以通过乘 2 方式转换为二进制，如下所示</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># <span class=\"token number\">3.5</span>转换为二进制</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">3</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span>  <span class=\"token number\">1</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span>  <span class=\"token number\">0</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>所以整数部分为<span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">--</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>因此<span class=\"token number\">3.5</span>的二进制表示就为 <span class=\"token number\">11.1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre># 把<span class=\"token number\">0.1</span>转换为二进制</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">0.1</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span>  <span class=\"token operator\">--</span><span class=\"token operator\">--</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">0.2</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.4</span>  <span class=\"token operator\">--</span><span class=\"token operator\">--</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">0.4</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span>  <span class=\"token operator\">--</span><span class=\"token operator\">--</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">0.8</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.6</span>  <span class=\"token operator\">--</span><span class=\"token operator\">--</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">0.6</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.2</span>  <span class=\"token operator\">--</span><span class=\"token operator\">--</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">0.2</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.4</span>  <span class=\"token operator\">--</span><span class=\"token operator\">--</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">0.4</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span>  <span class=\"token operator\">--</span><span class=\"token operator\">--</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">0.8</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.6</span>  <span class=\"token operator\">--</span><span class=\"token operator\">--</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">0.6</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.2</span>  <span class=\"token operator\">--</span><span class=\"token operator\">--</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">0.2</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.4</span>  <span class=\"token operator\">--</span><span class=\"token operator\">--</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> 按照<span class=\"token number\">0011</span>无限循环下去</pre></td></tr></table></figure><p>因此可以知道将一个十进制的小数转化为二进制小数时候可能得到一个无限循环小数，这也是部分计算丢失精度的原因之一。</p>\n<h4 id=\"java中怎么保存小数\"><a class=\"anchor\" href=\"#java中怎么保存小数\">#</a> Java 中怎么保存小数</h4>\n<p>在 Java 中是遵守 IEEE-754 格式标准来保存的。也就是一个二进制小数使用科学计数法表示，然后将这个表达式保存起来。 <code>符号位+指数位+小数位</code></p>\n<p>在 java 中通常由单精度浮点数 float（32 位）和双精度浮点数 double（64 位）。在 float 中的格式 1 位符号位，8 位指数，23 位表示小数；</p>\n<p>在 double 中 1 位符号位，11 位指数位，52 位小数位。因为双精度能保存更多的小数位，这也就是它精度更高的原因。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">3.5</span>使用<span class=\"token keyword\">float</span>保存如下<span class=\"token number\">1.11E+1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">0</span><span class=\"token punctuation\">(</span>符号位<span class=\"token punctuation\">)</span> <span class=\"token function\">10000000</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token number\">127</span><span class=\"token punctuation\">,</span>此处有一个指数偏移<span class=\"token punctuation\">)</span> <span class=\"token number\">11000000000000000000000</span>（由于一定是<span class=\"token number\">1.</span>xx的一个数所以前面的<span class=\"token number\">1</span>会保存）</pre></td></tr></table></figure><h3 id=\"为什么经过计算的小数会打印错误而直接打印就没问题\"><a class=\"anchor\" href=\"#为什么经过计算的小数会打印错误而直接打印就没问题\">#</a> 为什么经过计算的小数会打印错误而直接打印就没问题</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  # <span class=\"token number\">0.3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> # <span class=\"token number\">0.30000000000000004</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.30000000000000002</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> # <span class=\"token number\">0.30000000000000004</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.30000000000000001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> # <span class=\"token number\">0.3</span></pre></td></tr></table></figure><p>推测是 print 函数对其做了输出的优化，实际上还是会有精度丢失问题，只是恰好优化成了正确结果。</p>\n","categories":["java"],"tags":["浮点数精度"]}]